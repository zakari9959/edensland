'use client';
import React, { useState } from 'react';
import { useForm, SubmitHandler } from 'react-hook-form';
import './CreateBook.css';

type Inputs = {
  userId: number;
  title: string;
  age: string;
  imageUrl: FileList;
  personnageDescription: string;
  demande: string;
};

export default function CreateBook() {
  const [title, setTitle] = useState('');
  const [age, setAge] = useState('');
  const [demande, setDemande] = useState('');
  const [generatedText, setGeneratedText] = useState<string | null>('' || null);

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Inputs>();
  const onSubmit: SubmitHandler<Inputs> = async (data) => {
    console.log(data);
    try {
      const token = localStorage.getItem('token');
      const userId = localStorage.getItem('userId');
      const book = {
        userId: userId,
        title: data.title,
        age: data.age,
        /*personnageDescription: data.personnageDescription, */
        text: generatedText,
      };
      const formDataToSubmit = new FormData();
      formDataToSubmit.append('book', JSON.stringify(book));

      if (data.imageUrl.length > 0) {
        formDataToSubmit.append('imageUrl', data.imageUrl[0]);
      }
      formDataToSubmit.forEach((value, key) => {
        console.log(`Clé: ${key}, Valeur: ${value}`);
      });
      console.log(JSON.stringify(formDataToSubmit));
      const response = await fetch('http://localhost:4000/api/books', {
        method: 'POST',

        headers: {
          Authorization: `Bearer ${token}`,
        },
        body: formDataToSubmit,
      });

      if (response.ok) {
        console.log('Livre créé avec succès');
      } else {
        console.error('Erreur lors de la création du livre');
      }
    } catch (error) {
      console.error('Erreur lors de la création du livre :', error);
    }
  };

  return (
    <div className='create__book'>
      <h2>Créez un nouveau livre</h2>
      <form onSubmit={handleSubmit(onSubmit)}>
        <div>
          <label>Titre:</label>
          <input
            type='text'
            {...register('title', { required: true })}
            onChange={(e) => setTitle(e.target.value)}
          />
          {errors.title && <span>Ce champ est requis</span>}
        </div>
        <div>
          <label>Âge:</label>
          <select
            {...register('age', { required: true })}
            onChange={(e) => setAge(e.target.value)}
          >
            <option value='0-3'>0-3 ans</option>
            <option value='4-6'>4-6 ans</option>
            <option value='7-9'>7-9 ans</option>
            <option value='10+'>10 ans et plus</option>
          </select>
          {errors.age && <span>Ce champ est requis</span>}
        </div>
        <div>
          <label>Image:</label>
          <input type='file' accept='image/*' {...register('imageUrl')} />
        </div>
        <div>
          <label>Que souhaitez-vous dans votre histoire</label>
          <input
            type='text'
            {...register('demande', { required: true })}
            onChange={(e) => setDemande(e.target.value)}
          />
          {errors.demande && <span>Ce champ est requis</span>}
        </div>
        <button type='submit' className='create__book__button'>
          Créez le livre
        </button>
        {/*         {response && response.status === 200 && <p>Livre créé avec succès</p>}
         */}{' '}
      </form>
    </div>
  );
}
